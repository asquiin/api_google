[{"/Users/amerkanovaasel/Desktop/pr/src/index.js":"1","/Users/amerkanovaasel/Desktop/pr/src/App.js":"2","/Users/amerkanovaasel/Desktop/pr/src/redux/redux-store.js":"3","/Users/amerkanovaasel/Desktop/pr/src/pages/Results/Results.js":"4","/Users/amerkanovaasel/Desktop/pr/src/pages/Error/Error.js":"5","/Users/amerkanovaasel/Desktop/pr/src/pages/Header/Header.js":"6","/Users/amerkanovaasel/Desktop/pr/src/pages/BookCard/GetId.js":"7","/Users/amerkanovaasel/Desktop/pr/src/pages/BookCard/Card.js":"8","/Users/amerkanovaasel/Desktop/pr/src/redux/resultReducer.js":"9","/Users/amerkanovaasel/Desktop/pr/src/redux/headerReducer.js":"10"},{"size":424,"mtime":1693999476149,"results":"11","hashOfConfig":"12"},{"size":547,"mtime":1693999076941,"results":"13","hashOfConfig":"12"},{"size":394,"mtime":1693997253837,"results":"14","hashOfConfig":"12"},{"size":3420,"mtime":1693997102367,"results":"15","hashOfConfig":"12"},{"size":389,"mtime":1693995230634,"results":"16","hashOfConfig":"12"},{"size":2041,"mtime":1693997549636,"results":"17","hashOfConfig":"12"},{"size":254,"mtime":1693995717760,"results":"18","hashOfConfig":"12"},{"size":1778,"mtime":1693999429155,"results":"19","hashOfConfig":"12"},{"size":4775,"mtime":1693997260391,"results":"20","hashOfConfig":"12"},{"size":1331,"mtime":1693997247351,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yaj9se",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/amerkanovaasel/Desktop/pr/src/index.js",[],"/Users/amerkanovaasel/Desktop/pr/src/App.js",[],"/Users/amerkanovaasel/Desktop/pr/src/redux/redux-store.js",[],["46","47"],"/Users/amerkanovaasel/Desktop/pr/src/pages/Results/Results.js",["48","49","50"],"import React, { useEffect, useState } from \"react\";\nimport noImage from \"../../img/noImage.jpg\";\nimport { NavLink } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  loadMoreBooks,\n  startSearchBook,\n} from \"../../redux/resultReducer\";\nimport Error from \"../Error/Error\";\nimport \"./Results.css\";\n\nconst Results = () => {\n  const dispatch = useDispatch();\n  const searchString = useSelector((state) => state.header.newSearchString);\n  const orderBy = useSelector((state) => state.header.orderBy);\n  const category = useSelector((state) => state.header.category);\n  const results = useSelector((state) => state.searchResult.results);\n  const totalItems = useSelector((state) => state.searchResult.totalItems);\n  const isFetching = useSelector((state) => state.searchResult.isFetching);\n  const isFetchError = useSelector((state) => state.searchResult.isFetchError);\n\n  let [booksCount, increaseBooksCount] = useState(30);\n\n  useEffect(() => {\n    dispatch(startSearchBook(searchString, orderBy, category));\n  }, [searchString, orderBy, category]);\n\n  let onLoadMoreButton = () => {\n    dispatch(loadMoreBooks(booksCount, results, searchString));\n    increaseBooksCount(booksCount + 30);\n  };\n\n  return (\n    <>\n      {isFetching ? (\n        <div className=\"forLoader\">\n          <span className=\"loader\"></span>\n        </div>\n      ) : null}\n\n      <div className=\"books_container\">\n        <div>\n          <h2 className=\"how_much_found\">Found {totalItems} results</h2>\n        </div>\n        <div className=\"books_row\">\n          {results.map((b) => (\n            <div className=\"books_items\">\n              <NavLink to={\"/bookCard/\" + b.id} className=\"navbar\">\n                <div className=\"book_item\">\n                  <div className=\"book_img\">\n                    <img\n                      src={\n                        b.volumeInfo.imageLinks != null\n                          ? b.volumeInfo.imageLinks.smallThumbnail\n                          : noImage\n                      }\n                    ></img>\n                  </div>\n                  <div className=\"book_info\">\n                    <h5>\n                      Category:\n                      <span className=\"book_category\">\n                        {b.volumeInfo.categories != null\n                          ? b.volumeInfo.categories[0]\n                          : \"Неизвестно\"}\n                      </span>\n                    </h5>\n                    <h1 className=\"book_name\"> {b.volumeInfo.title} </h1>\n                    <p>\n                      Author:\n                      <span className=\"book_authors\"> \n                      {b.volumeInfo.authors != null\n                        ? b.volumeInfo.authors\n                        : \"Неизвестно\"}\n                        </span>\n                    </p>\n                  </div>\n                </div>\n              </NavLink>\n            </div>\n          ))}\n        </div>\n        <div className=\"button\">\n          {totalItems > results.length ? (\n            <button\n              className=\"load_more_button\"\n              onClick={() => {\n                onLoadMoreButton();\n              }}\n            >\n              Load more\n            </button>\n          ) : (\n            booksCount == 0\n          )}\n        </div>\n      </div>\n\n      {isFetchError ? <Error /> : null}\n    </>\n  );\n};\n\nexport default Results;\n","/Users/amerkanovaasel/Desktop/pr/src/pages/Error/Error.js",[],"/Users/amerkanovaasel/Desktop/pr/src/pages/Header/Header.js",[],"/Users/amerkanovaasel/Desktop/pr/src/pages/BookCard/GetId.js",[],"/Users/amerkanovaasel/Desktop/pr/src/pages/BookCard/Card.js",["51","52"],"import { useDispatch, useSelector } from \"react-redux\";\nimport { getBookCard } from \"../../redux/resultReducer\";\nimport React, { useEffect } from \"react\";\nimport \"./styles.css\";\n\nconst BookCardWithHooks = (props) => {\n  const dispatch = useDispatch();\n  const bookCard = useSelector((state) => state.searchResult.bookCard);\n\n  useEffect(() => {\n    dispatch(getBookCard(props.userId));\n  }, []);\n\n  if (!bookCard) {\n    return <h1> loading... </h1>;\n  }\n\n  return (\n    <div className=\"book_card_row\">\n      <div className=\"book_card\">\n        <div className=\"book_card_img\">\n          <img\n            src={\n              bookCard.volumeInfo.imageLinks != null\n                ? bookCard.volumeInfo.imageLinks.thumbnail\n                : \"\"\n            }\n          ></img>\n        </div>\n        <div className=\"book_card_info\">\n          <h1 className=\"book_categories\">\n            Category:\n            {bookCard.volumeInfo.categories != null\n              ? bookCard.volumeInfo.categories\n              : \"Неизвестно\"}\n          </h1>\n          <h2 className=\"book_name\">\n            {\" \"}\n            Title:{\" \"}\n            {bookCard.volumeInfo.title != null\n              ? bookCard.volumeInfo.title\n              : \"Not given\"}{\" \"}\n          </h2>\n          <h2 className=\"book_authors\">\n            {\" \"}\n            Автор:{\" \"}\n            {bookCard.volumeInfo.authors != null\n              ? bookCard.volumeInfo.authors\n              : \"Неизвестно\"}\n          </h2>\n          <p className=\"book_description\">\n            {bookCard.volumeInfo.description != null\n              ? bookCard.volumeInfo.description\n              : \"Not available\"}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BookCardWithHooks;\n","/Users/amerkanovaasel/Desktop/pr/src/redux/resultReducer.js",["53","54","55"],"import axios from \"axios\"\n\nconst instance = axios.create({\n    baseURL: \"https://www.googleapis.com/books/v1/volumes\",\n})\n\nexport const bookAPI = {\n    searchBook(searchString, orderBy, category) {\n        if (category != '') {\n            return instance.get(`?maxResults=30&orderBy=${orderBy}&q=${(searchString) + '+subject:' + (category) + '&key=AIzaSyBSdsuDMR2_8Rj8oSkDhvYfilF5gPz4e5A'}`)\n        } else {\n            return instance.get(`?maxResults=30&orderBy=${orderBy}&q=${(searchString) + '&key=AIzaSyBSdsuDMR2_8Rj8oSkDhvYfilF5gPz4e5A'}`)\n        }\n    },\n\n    showBookCard(userId) {\n        return instance.get('/' + userId + '?' + '&key=AIzaSyBSdsuDMR2_8Rj8oSkDhvYfilF5gPz4e5A')\n    },\n\n    loadMoreButton(booksCount, searchString) {\n        return instance.get(`?maxResults=30&startIndex=${booksCount}&q=${(searchString)}`)\n    }\n}\n\nconst LOAD_BOOK = 'LOAD-BOOK';\nconst LOAD_SEARCH_RESULTS = 'LOAD-SEARCH-RESULTS';\nconst SET_TOTAL_ITEMS = 'SET-TOTAL-ITEMS';\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\nconst SET_BOOK_CARD = 'SET-BOOK-CARD';\nconst LOAD_MORE = 'LOAD-MORE';\nconst SET_FETCH_ERROR = 'SET_FETCH_ERROR';\nconst CLEAN_RESULTS = 'CLEAN-RESULTS';\n\nlet initialState = {\n    results: [],\n    totalItems: 0,\n    isFetching: true,\n    bookCard: null,\n    isFetchError: false,\n};\n\nconst resultReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case LOAD_BOOK: {\n            return {\n                ...state,\n            };\n        }\n        case LOAD_SEARCH_RESULTS: {\n            return {\n                ...state,\n                results: action.results,\n            }\n        }\n\n        case SET_TOTAL_ITEMS: {\n            return {\n                ...state,\n                totalItems: action.totalItems,\n            }\n        }\n\n        case TOGGLE_IS_FETCHING: {\n            return {\n                ...state,\n                isFetching: action.isFetching,\n            }\n        }\n\n        case SET_BOOK_CARD: {\n            return {\n                ...state,\n                bookCard: action.bookCard,\n            }\n        }\n\n        case LOAD_MORE: {\n            return {\n                ...state,\n                results: [...state.results, ...action.moreBooks],\n            }\n        }\n\n        case SET_FETCH_ERROR: {\n            return {\n                ...state,\n                isFetchError: action.isError,\n            }\n        }\n\n        case CLEAN_RESULTS: {\n            return {\n                ...state,\n                results: [],\n            }\n        }\n\n        default:\n            return state;\n    }\n}\n\nexport const loadBook = () => ({ type: LOAD_BOOK });\nexport const loadSearchResults = (results) => ({ type: LOAD_SEARCH_RESULTS, results });\nexport const setTotalItems = (totalItems) => ({ type: SET_TOTAL_ITEMS, totalItems });\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\nexport const setBookCard = (bookCard) => ({ type: SET_BOOK_CARD, bookCard });\nexport const loadMore = (moreBooks) => ({ type: LOAD_MORE, moreBooks });\nexport const setFetchError = (isError) => ({ type: SET_FETCH_ERROR, isError })\nexport const cleanResults = () => ({ type: CLEAN_RESULTS, })\n\nexport const startSearchBook = (searchString, orderBy, category) => {\n    return async (dispatch) => {\n        try {\n            dispatch(setFetchError(false));\n            dispatch(toggleIsFetching(true));\n            let response = await bookAPI.searchBook(searchString, orderBy, category);\n            dispatch(toggleIsFetching(false));\n            dispatch(setTotalItems(response.data.totalItems));\n            if (response.data.totalItems != 0) {\n                dispatch(loadSearchResults(response.data.items));\n            } else {\n                dispatch(cleanResults());\n            }\n        } catch (e) {\n            dispatch(setFetchError(true));\n            dispatch(toggleIsFetching(false));\n        }\n    }\n}\n\nexport const getBookCard = (userId) => {\n    return async (dispatch) => {\n        try {\n            dispatch(setFetchError(false));\n            let response = await bookAPI.showBookCard(userId);\n            dispatch(setBookCard(response.data));\n        } catch (e) {\n            dispatch(setFetchError(true));\n            dispatch(toggleIsFetching(false));\n        }\n    };\n}\n\nexport const loadMoreBooks = (booksCount, previousState, searchString) => {\n\n    return async (dispatch) => {\n        try {\n            dispatch(setFetchError(false));\n            let response = await bookAPI.loadMoreButton(booksCount, searchString);\n            dispatch(loadMore(response.data.items, previousState));\n        } catch (e) {\n            dispatch(setFetchError(true));\n            dispatch(toggleIsFetching(false));\n        }\n    }\n}\n\nexport default resultReducer;\n\n","/Users/amerkanovaasel/Desktop/pr/src/redux/headerReducer.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":26,"column":6,"nodeType":"62","endLine":26,"endColumn":39,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":51,"column":21,"nodeType":"66","endLine":57,"endColumn":22},{"ruleId":"67","severity":1,"message":"68","line":94,"column":24,"nodeType":"69","messageId":"70","endLine":94,"endColumn":26},{"ruleId":"60","severity":1,"message":"71","line":12,"column":6,"nodeType":"62","endLine":12,"endColumn":8,"suggestions":"72"},{"ruleId":"64","severity":1,"message":"65","line":22,"column":11,"nodeType":"66","endLine":28,"endColumn":12},{"ruleId":"67","severity":1,"message":"73","line":9,"column":22,"nodeType":"69","messageId":"70","endLine":9,"endColumn":24},{"ruleId":"74","severity":1,"message":"75","line":17,"column":48,"nodeType":"69","messageId":"76","endLine":17,"endColumn":49},{"ruleId":"67","severity":1,"message":"73","line":121,"column":42,"nodeType":"69","messageId":"70","endLine":121,"endColumn":44},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["79"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'dispatch' and 'props.userId'. Either include them or remove the dependency array.",["80"],"Expected '!==' and instead saw '!='.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [searchString, orderBy, category, dispatch]",{"range":"85","text":"86"},"Update the dependencies array to be: [dispatch, props.userId]",{"range":"87","text":"88"},[1052,1085],"[searchString, orderBy, category, dispatch]",[391,393],"[dispatch, props.userId]"]