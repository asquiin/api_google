{"ast":null,"code":"import { bookAPI } from \"../api/api\";\nconst LOAD_BOOK = 'LOAD-BOOK';\nconst LOAD_SEARCH_RESULTS = 'LOAD-SEARCH-RESULTS';\nconst SET_TOTAL_ITEMS = 'SET-TOTAL-ITEMS';\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\nconst SET_BOOK_CARD = 'SET-BOOK-CARD';\nconst LOAD_MORE = 'LOAD-MORE';\nconst SET_FETCH_ERROR = 'SET_FETCH_ERROR';\nconst CLEAN_RESULTS = 'CLEAN-RESULTS';\nlet initialState = {\n  results: [],\n  totalItems: 0,\n  isFetching: true,\n  bookCard: null,\n  isFetchError: false\n};\nconst searchResultsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case LOAD_BOOK:\n      {\n        return {\n          ...state\n        };\n      }\n    case LOAD_SEARCH_RESULTS:\n      {\n        return {\n          ...state,\n          results: action.results\n        };\n      }\n    case SET_TOTAL_ITEMS:\n      {\n        return {\n          ...state,\n          totalItems: action.totalItems\n        };\n      }\n    case TOGGLE_IS_FETCHING:\n      {\n        return {\n          ...state,\n          isFetching: action.isFetching\n        };\n      }\n    case SET_BOOK_CARD:\n      {\n        return {\n          ...state,\n          bookCard: action.bookCard\n        };\n      }\n    case LOAD_MORE:\n      {\n        return {\n          ...state,\n          results: [...state.results, ...action.moreBooks]\n        };\n      }\n    case SET_FETCH_ERROR:\n      {\n        return {\n          ...state,\n          isFetchError: action.isError\n        };\n      }\n    case CLEAN_RESULTS:\n      {\n        return {\n          ...state,\n          results: []\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport const loadBook = () => ({\n  type: LOAD_BOOK\n});\nexport const loadSearchResults = results => ({\n  type: LOAD_SEARCH_RESULTS,\n  results\n});\nexport const setTotalItems = totalItems => ({\n  type: SET_TOTAL_ITEMS,\n  totalItems\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const setBookCard = bookCard => ({\n  type: SET_BOOK_CARD,\n  bookCard\n});\nexport const loadMore = moreBooks => ({\n  type: LOAD_MORE,\n  moreBooks\n});\nexport const setFetchError = isError => ({\n  type: SET_FETCH_ERROR,\n  isError\n});\nexport const cleanResults = () => ({\n  type: CLEAN_RESULTS\n});\nexport const startSearchBook = (searchString, orderBy, category) => {\n  return async dispatch => {\n    try {\n      dispatch(setFetchError(false));\n      dispatch(toggleIsFetching(true));\n      let response = await bookAPI.searchBook(searchString, orderBy, category);\n      dispatch(toggleIsFetching(false));\n      dispatch(setTotalItems(response.data.totalItems));\n      if (response.data.totalItems != 0) {\n        dispatch(loadSearchResults(response.data.items));\n      } else {\n        dispatch(cleanResults());\n      }\n    } catch (e) {\n      dispatch(setFetchError(true));\n      dispatch(toggleIsFetching(false));\n    }\n  };\n};\nexport const getBookCard = userId => {\n  return async dispatch => {\n    try {\n      dispatch(setFetchError(false));\n      let response = await bookAPI.showBookCard(userId);\n      dispatch(setBookCard(response.data));\n    } catch (e) {\n      dispatch(setFetchError(true));\n      dispatch(toggleIsFetching(false));\n    }\n  };\n};\nexport const loadMoreBooks = (booksCount, previousState, searchString) => {\n  return async dispatch => {\n    try {\n      dispatch(setFetchError(false));\n      let response = await bookAPI.loadMoreButton(booksCount, searchString);\n      dispatch(loadMore(response.data.items, previousState));\n    } catch (e) {\n      dispatch(setFetchError(true));\n      dispatch(toggleIsFetching(false));\n    }\n  };\n};\nexport default searchResultsReducer;","map":{"version":3,"names":["bookAPI","LOAD_BOOK","LOAD_SEARCH_RESULTS","SET_TOTAL_ITEMS","TOGGLE_IS_FETCHING","SET_BOOK_CARD","LOAD_MORE","SET_FETCH_ERROR","CLEAN_RESULTS","initialState","results","totalItems","isFetching","bookCard","isFetchError","searchResultsReducer","state","arguments","length","undefined","action","type","moreBooks","isError","loadBook","loadSearchResults","setTotalItems","toggleIsFetching","setBookCard","loadMore","setFetchError","cleanResults","startSearchBook","searchString","orderBy","category","dispatch","response","searchBook","data","items","e","getBookCard","userId","showBookCard","loadMoreBooks","booksCount","previousState","loadMoreButton"],"sources":["/Users/amerkanovaasel/Desktop/react-app-books/src/redux/searchResult-reducer.js"],"sourcesContent":["import { bookAPI } from \"../api/api\";\n\nconst LOAD_BOOK = 'LOAD-BOOK';\nconst LOAD_SEARCH_RESULTS = 'LOAD-SEARCH-RESULTS';\nconst SET_TOTAL_ITEMS = 'SET-TOTAL-ITEMS';\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\nconst SET_BOOK_CARD = 'SET-BOOK-CARD';\nconst LOAD_MORE = 'LOAD-MORE';\nconst SET_FETCH_ERROR = 'SET_FETCH_ERROR';\nconst CLEAN_RESULTS = 'CLEAN-RESULTS';\n\nlet initialState = {\n    results: [],\n    totalItems: 0,\n    isFetching: true,\n    bookCard: null,\n    isFetchError: false,\n};\n\nconst searchResultsReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case LOAD_BOOK: {\n            return {\n                ...state,\n            };\n        }\n        case LOAD_SEARCH_RESULTS: {\n            return {\n                ...state,\n                results: action.results,\n            }\n        }\n\n        case SET_TOTAL_ITEMS: {\n            return {\n                ...state,\n                totalItems: action.totalItems,\n            }\n        }\n\n        case TOGGLE_IS_FETCHING: {\n            return {\n                ...state,\n                isFetching: action.isFetching,\n            }\n        }\n\n        case SET_BOOK_CARD: {\n            return {\n                ...state,\n                bookCard: action.bookCard,\n            }\n        }\n\n        case LOAD_MORE: {\n            return {\n                ...state,\n                results: [...state.results, ...action.moreBooks],\n            }\n        }\n\n        case SET_FETCH_ERROR: {\n            return {\n                ...state,\n                isFetchError: action.isError,\n            }\n        }\n\n        case CLEAN_RESULTS: {\n            return {\n                ...state,\n                results: [],\n            }\n        }\n\n        default:\n            return state;\n    }\n}\n\nexport const loadBook = () => ({ type: LOAD_BOOK });\nexport const loadSearchResults = (results) => ({ type: LOAD_SEARCH_RESULTS, results });\nexport const setTotalItems = (totalItems) => ({ type: SET_TOTAL_ITEMS, totalItems });\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\nexport const setBookCard = (bookCard) => ({ type: SET_BOOK_CARD, bookCard });\nexport const loadMore = (moreBooks) => ({ type: LOAD_MORE, moreBooks });\nexport const setFetchError = (isError) => ({ type: SET_FETCH_ERROR, isError })\nexport const cleanResults = () => ({ type: CLEAN_RESULTS, })\n\nexport const startSearchBook = (searchString, orderBy, category) => {\n    return async (dispatch) => {\n        try {\n            dispatch(setFetchError(false));\n            dispatch(toggleIsFetching(true));\n            let response = await bookAPI.searchBook(searchString, orderBy, category);\n            dispatch(toggleIsFetching(false));\n            dispatch(setTotalItems(response.data.totalItems));\n            if (response.data.totalItems != 0) {\n                dispatch(loadSearchResults(response.data.items));\n            } else {\n                dispatch(cleanResults());\n            }\n        } catch (e) {\n            dispatch(setFetchError(true));\n            dispatch(toggleIsFetching(false));\n        }\n    }\n}\n\nexport const getBookCard = (userId) => {\n    return async (dispatch) => {\n        try {\n            dispatch(setFetchError(false));\n            let response = await bookAPI.showBookCard(userId);\n            dispatch(setBookCard(response.data));\n        } catch (e) {\n            dispatch(setFetchError(true));\n            dispatch(toggleIsFetching(false));\n        }\n    };\n}\n\nexport const loadMoreBooks = (booksCount, previousState, searchString) => {\n\n    return async (dispatch) => {\n        try {\n            dispatch(setFetchError(false));\n            let response = await bookAPI.loadMoreButton(booksCount, searchString);\n            dispatch(loadMore(response.data.items, previousState));\n        } catch (e) {\n            dispatch(setFetchError(true));\n            dispatch(toggleIsFetching(false));\n        }\n    }\n}\n\nexport default searchResultsReducer;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}